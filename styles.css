:root{
    --penguin-face: white;
    --penguin-picorna: orange;
    --penguin-skin: gray;

}
body{
    background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100vh;
    /* Remove both the horizontal and vertical scrollbars, using only one property.*/
    overflow: hidden;
}
.left-mountain {
    width: 300px;
    height: 300px;
    background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));
/* To prevent the mountain from pushing the .ground element, adjust its position to prevent it from taking up space in the page layout.*/        
    position: absolute;
/* */        
    transform: skew(0deg, 44deg);
    z-index: 2; /*You should use the z-index property to change the stack level.*/
    margin-top: 100px; /* to overlap the mountain and ground.*/
}
.back-mountain {
    width: 300px;
    height: 300px;
    background: linear-gradient(45deg, rgb(203, 241, 228), rgb(47, 170, 255));
    position: absolute;
    z-index: 1;
    transform: rotate(45);
    left: 110px;
    top: 225px;
} 
.sun{
    background-color: yellow;
    height: 200px;
    width: 200px;
    position: absolute;
    border-radius: 50%;
/* Position the sun in the top right corner of the screen such that 75px of its top and right edges are off screen.*/   
    top: -75px;
    right: -75px;
}
.penguin {
    width: 300px;
    height: 300px;
    margin: auto;
    margin-top: 75px;
    position: relative;
    z-index: 4;
    transition: 1s ease-in-out 0ms;
} 
.penguin *{
    position: absolute;
}
.penguin:active{
    size: 50%;
    transform: scale(1.5);
    cursor: not-allowed;
}
.penguin-head{
    height: 45%;
    width: 50%;
    background: linear-gradient(45deg, var(--penguin-skin), rgb(239, 240, 228));
    border-radius: 70% 70% 65% 65%;
    top: 10%;
    left: 25%;
    z-index: 1;
}
.face{
    width: 60%;
    height: 70%;
   /* Where relevant, replace property values with your --penguin-face variable.*/ 
    background-color: var(--penguin-face);
    border-radius: 70% 70% 60% 60%;
    top: 15%;
}
.face.left {
    left: 5%;
}
.face.right {
    right: 5%;
}
.chin{
    width: 90%;
    height: 70%;
    /* Where relevant, replace property values with your --penguin-face variable.*/ 
    background-color: var(--penguin-face);
    top: 25%;
    left: 5%;
    border-radius: 70% 70% 100% 100%;
}
.eye{
    width: 15%;
    height: 17%;
    background-color: black;
    top: 45%;
    border-radius: 50%;
}
.eye.left{
    left: 25%;
}
  .eye.right{
    right: 25%;
}
.eye-lid{
    width: 150%;
    height: 100%;
    background-color: var(--penguin-face);
    top: 25%;
    left: -23%;
    border-radius: 50%;
}
.blush {
    width: 15%;
    height: 10%;
    background-color: pink;
    top: 65%;
    border-radius: 50%;
}
.blush.left{
    left: 15%;
}
 .blush.right{
   right: 15%;
}
.beak{
    height: 10%;
    background-color: var(--penguin-picorna);
    border-radius: 50%;
}
.beak.top{
    width: 20%;
    top: 60%;
    left: 40%;
}
/* Target the .beak element with a class of bottom, and give it a width 4% smaller than .beak.top, 5% further from the top, and 2% further from the left of its parent than .beak.top.*/
.beak.bottom{
    width: 16%;
    top: 65%;
    left: 42%;
}
.shirt{
    font: bold 25px Helvetica, sans-serif;
    top: 165px;
    left: 127.5px;
    z-index:1;
    color: #6a6969;
}
.shirt div{
    font-weight: initial;
    top: 22.5px;
    left: 12px;
}
.penguin-body{
    width: 53%;
    height: 45%;
    background: linear-gradient(45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67%); 
    border-radius: 80% 80% 100% 100%;
    top: 40%;
    left: 23.5%;
}
/* To give the penguin body a crest, create a pseudo-element that is the first child of the .penguin-body element.*/
.penguin-body::before{
    content: "";
    position: absolute;
    width: 50%;
    height: 45%;
    background-color: var(--penguin-skin);
    top: 10%;
    left: 25%;
    border-radius: 0% 0% 100% 100%;
  /* Increase the pseudo-element's transparency by 30%.*/  
    opacity: 70%;
}
.arm{
    background: linear-gradient(90deg, var(--penguin-skin), rgb(209, 210, 199));
    width: 30%;
    height: 60%;
    border-top-right-radius: 30%;
    border-top-left-radius: 30%;
    border-bottom-right-radius: 30%;
    border-bottom-left-radius: 120%;
    z-index: -1
}
.arm.left{
    top: 35%;
    left: 5%;
    transform-origin: top left;
    transform: rotate(130deg) scaleX(-1);
/*animation-timing-function:  linear; 
    -Use the wave animation on the left arm. Have the animation last 3s, infinitely iterate, and have a linear timing function.
    animation-iteration-count:  infinite;*/    
    animation: wave 3s linear infinite;
}
.arm.right{
   top: 0%;
   right: -5%;
   transform: rotate(-45deg); /* Rotate the right arm by 45deg counterclockwise.*/
}
/* Now, you are going to use CSS animations to make the penguin wave.*/
@keyframes wave {
    /*Give wave four waypoints starting at 10%, and incrementing by 10%.*/
    10%{
        transform: rotate(110deg) scaleX(-1);
    }
    20%{
        transform: rotate(130deg) scaleX(-1);
    }
    30%{
        transform: rotate(110deg) scaleX(-1);
    }
    40%{
        transform: rotate(130deg) scaleX(-1);
    }
}
.foot {
    width:  15%;
    height: 30%;
    background-color: var(--penguin-picorna);
    top: 85%;
    border-radius: 50%;
}
.foot.left{
    left: 25%;
    transform:  rotate(80deg);
}
.foot.right{
    right: 25%;
    transform:  rotate(-80deg);
}
.ground {
    width: 100vw;
/*Finally, calculate the height of the .ground element to be the height of the viewport minus the height of the .penguin element.*/    
    height: calc(100vh - 300px);
    background: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));
    z-index: 3;
    position: absolute;
    margin-top: -58px; /* to overlap the mountain and ground.*/
}